name: release-tagged
permissions:
  contents: write
  issues: read
  pull-requests: read
on:
  release:
    types:
      - published

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      DOCKER_CLI_EXPERIMENTAL: "enabled"
    outputs:
      tag: ${{ steps.tagName.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Unshallow
        run: git fetch --prune --unshallow

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32
        with:
          go-version: 1.22.x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db

      - uses: azure/docker-login@15c4aadf093404726ab2ff205b2cdd33fa6d054c
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to cloudsmith registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: docker.cloudsmith.io
          username: ${{ secrets.CLOUDSMITH_USER }}
          password: ${{ secrets.CLOUDSMITH_API_KEY }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release
          version: latest

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPARITOR_GITHUB_TOKEN: ${{ secrets.APPARITOR_GITHUB_TOKEN }}

      - name: Get tag name
        id: tagName
        run: |
          TAG=$(git describe --tags --exact-match)
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Find latest tag
        id: latestTag
        run: |
          LATEST_TAG=$(git tag | grep -vi 'rc' | sort --version-sort | tail -1)
          echo "tag=${LATEST_TAG}" >> "$GITHUB_OUTPUT"

      - name: Publish latest tag
        if: "steps.latestTag.outputs.tag == steps.tagName.outputs.tag"
        run: |
          docker manifest create -a pomerium/datasource:latest pomerium/datasource:amd64-${{ steps.tagName.outputs.tag }} pomerium/datasource:arm64v8-${{ steps.tagName.outputs.tag }}
          docker manifest push pomerium/datasource:latest
